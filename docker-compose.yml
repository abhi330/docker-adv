version: '3.8'

services:
  mysql-db:
    build:
      context: ./mysql
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: adv
    ports:
      - "3307:3306"
    networks:
      - my-network
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    build:
      context: ./redis
    container_name: redis
    restart: always
    ports:
      - "6377:6379"
    networks:
      - my-network
    volumes:
      - redis-data:/data

  customer-service:
    build:
      context: ./customer-service
    image: abhilashmedaboina/dockerone:customer-service-adv
    container_name: customer-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/adv
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "9001:9001"
    networks:
      - my-network
    depends_on:
      mysql-db:
        condition: service_healthy  # Ensure MySQL is healthy before starting
      redis:
        condition: service_started
    restart: always

networks:
  my-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local
